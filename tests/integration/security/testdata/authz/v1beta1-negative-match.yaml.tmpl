# The following policy denies access to path with prefix "/prefix" except "/prefix/allowlist" to workload

apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: policy-{{ .dst0 }}-deny
  namespace: "{{ .Namespace }}"
spec:
  selector:
    matchLabels:
      "app": "{{ .dst0 }}"
  action: DENY
  rules:
  - to:
    - operation:
        paths: ["/prefix*"]
        notPaths: ["/prefix/allowlist"]
---

# The following policy denies access from other namespaces

apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: policy-{{ .dst1 }}-same-namespace
  namespace: "{{ .Namespace }}"
spec:
  selector:
    matchLabels:
      "app": "{{ .dst1 }}"
  action: DENY
  rules:
  - from:
    - source:
        notNamespaces: ["{{ .Namespace }}"]
---

# The following policy denies access to a workload if it's not mTLS, in other words,
# it allows only mTLS traffic to access the workload

apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: policy-{{ .dst2 }}-mtls-traffic
  namespace: "{{ .Namespace }}"
spec:
  selector:
    matchLabels:
      "app": "{{ .dst2 }}"
  action: DENY
  rules:
  - from:
    - source:
        notPrincipals: ["*"]
---

# The following policy denies access to path with prefix "/prefix" except "/prefix/allowlist" to workload
# (TODO)JimmyCYJ: the following policy is a duplicate of policy-{{ .dst0 }}-deny
# and can be removed once the test framework supports multiple vm workloads
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: policy-{{ .dst3 }}-deny
  namespace: "{{ .Namespace }}"
spec:
  selector:
    matchLabels:
      "app": "{{ .dst3 }}"
  action: DENY
  rules:
  - to:
    - operation:
        paths: ["/prefix*"]
        notPaths: ["/prefix/allowlist"]
---

# The following policy enables mTLS with PERMISSIVE mode for all workloads in the namespace

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: "{{ .Namespace }}"
spec:
  mtls:
    mode: PERMISSIVE
---

# The following destination rule enables mTLS in the namespace

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "mtls"
  namespace: "{{ .Namespace }}"
spec:
  host: "*.{{ .Namespace }}.svc.cluster.local"
  exportTo: ["."]
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---

# The following destination rule enables mTLS from namespace 2 to workload

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "dr-{{ .dst0 }}"
  namespace: "{{ .Namespace2 }}"
spec:
  host: "{{ .dst0 }}.{{ .Namespace }}.svc.cluster.local"
  exportTo: ["."]
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---

# The following destination rule enables mTLS from namespace 2 to workload

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "dr-{{ .dst1 }}"
  namespace: "{{ .Namespace2 }}"
spec:
  host: "{{ .dst1 }}.{{ .Namespace }}.svc.cluster.local"
  exportTo: ["."]
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---

# The following destination rule disables mTLS from namespace 2 to workload

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "dr-{{ .dst2 }}"
  namespace: "{{ .Namespace2 }}"
spec:
  host: "{{ .dst2 }}.{{ .Namespace }}.svc.cluster.local"
  exportTo: ["."]
  trafficPolicy:
    tls:
      mode: DISABLE
---