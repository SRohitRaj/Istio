# istio-group-list-rbac-rules.yaml to enforce access control based on
# groups and list claims for both http and tcp services using Istio RBAC rules.

# For service a, allow no one to access it.
# This will also result a default tcp rule for service a that denies all access.
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: access-a-http
spec:
  rules:
    - methods: ["GET"]
      constraints:
        - key: "destination.labels[app]"
          values: ["a"]
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: AuthorizationPolicy
metadata:
  name: authz-policy-access-a-http
spec:
  allow:
    - subjects:
        - not_names: ["allUsers"]
      roleRef:
        kind: ServiceRole
        name: "access-a-http"
---
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: "require-jwt-for-b"
spec:
  targets:
  - name: b
  origins:
  - jwt:
      issuer: "testing@secure.istio.io"
      jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.1/security/tools/jwt/samples/jwks.json"
  principalBinding: USE_ORIGIN
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: b-viewer
spec:
  rules:
  - services: ["b.{{ .Namespace }}.svc.cluster.local"]
    methods: ["GET"]
---
# Require a JWT with valid group claim to access service b
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: bind-b-viewer
spec:
  subjects:
  - group: "group1"
  roleRef:
    kind: ServiceRole
    name: "b-viewer"
---
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: "require-jwt-for-c"
spec:
  targets:
  - name: c
  origins:
  - jwt:
      issuer: "testing@secure.istio.io"
      jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.1/security/tools/jwt/samples/jwks.json"
  principalBinding: USE_ORIGIN
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: c-viewer
spec:
  rules:
  - services: ["c.{{ .Namespace }}.svc.cluster.local"]
    methods: ["GET"]
---
# Require a JWT with valid list-typed scope claim to access service c
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: bind-c-viewer
spec:
  subjects:
  - properties:
      request.auth.claims[scope]: "scope1"
  roleRef:
    kind: ServiceRole
    name: "c-viewer"
---
