#!/usr/bin/env bash

# Copyright 2020 Istio Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
set -u
set -o pipefail

{{ $inputTerminalFlag := "-i" }}
{{- if .isSnippet -}}
  {{ $inputTerminalFlag = "-it" }}
{{- end -}}

# $snippet test_fortio_httpbin_interaction.sh syntax="bash"
$ FORTIO_POD=$(kubectl get pods -n istio-io-circuitbreaker | grep fortio | awk '{ print $1 }')
$ kubectl -n istio-io-circuitbreaker exec {{ $inputTerminalFlag }} $FORTIO_POD -c fortio /usr/bin/fortio -- load -curl http://httpbin:8000/get
# $verify verifier="contains"
200 OK
# $endsnippet

function is_acceptable() {
  local status_and_percentage=$(grep '^Code\s*[0-9]*\s*:\s*[0-9]*\s\(.*\)$' | sed 's/[:%\(\)Code]//g' | cut -d " " -f2,5)

  local status_code=$1
  local lower_bound=$2
  local upper_bound=$3

  local given_status_code=$(echo $status_and_percentage | awk '{print $1}')
  local given_percentage=$(echo $status_and_percentage | awk '{print $2}')

  if ((given_status_code == status_code)); then
    local is_below_lower_bound=$(bc <<< "${given_percentage} < ${lower_bound}")
    local is_above_upper_bound=$(bc <<< "${given_percentage} > ${upper_bound}")
    echo $is_below_lower_bound $is_above_upper_bound
    if ((is_below_lower_bound || is_above_upper_bound)); then
      echo "bound breached. status=${given_status} given=${given_percentage} - not between ${lower_bound} and ${upper_bound}"
      return 1
    fi
  fi
}

{{ $withoutTripVerifyCmd := "| tee >(is_acceptable 200 80 100) | tee >(is_acceptable 503 0 20)" }}
{{- if .isSnippet  -}}
  {{ $withoutTripVerifyCmd = "" }}
{{- end -}}

# $snippet almost_trip_circuit_breaker.sh syntax="bash"
$ kubectl -n istio-io-circuitbreaker exec {{ $inputTerminalFlag }} $FORTIO_POD -c fortio /usr/bin/fortio -- \
    load -c 2 -qps 0 -n 20 -loglevel warning http://httpbin:8000/get {{ $withoutTripVerifyCmd }};
# $endsnippet

{{ $withTripVerifyCmd := "| tee >(is_acceptable 200 30 60) | tee >(is_acceptable 503 0 0)" }}
{{- if .isSnippet -}}
  {{ $withTripVerifyCmd = "" }}
{{- end -}}

# $snippet trip_circuit_breaker.sh syntax="bash"
$ kubectl -n istio-io-circuitbreaker exec {{ $inputTerminalFlag }} $FORTIO_POD -c fortio /usr/bin/fortio -- \
    load -c 3 -qps 0 -n 30 -loglevel warning http://httpbin:8000/get {{ $withTripVerifyCmd }}
# $verify verifier="contains"
Parsed non ok code 503 (HTTP/1.1 503)
# $endsnippet

# $snippet print_statistics_after_tripping.sh syntax="bash"
$ kubectl -n istio-io-circuitbreaker exec {{ $inputTerminalFlag }} $FORTIO_POD \
  -c istio-proxy -- pilot-agent request GET stats | grep httpbin | grep pending
# $endsnippet
