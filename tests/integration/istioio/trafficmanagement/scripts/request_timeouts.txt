#!/usr/bin/env bash

# Copyright 2020 Istio Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
set -u
set -o pipefail

# TODO: Find better way to re-use HOST in multiple test
# Export HOST, PORT and URL
# $snippet export_gateway_url_1.sh syntax="bash"
INGRESS_NS=${INGRESS_NS:-istio-system}
INGRESS_HOST=$(kubectl -n "${INGRESS_NS}" get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
export INGRESS_HOST
INGRESS_PORT=$(kubectl -n "${INGRESS_NS}" get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}')
export INGRESS_PORT
SECURE_INGRESS_PORT=$(kubectl -n "${INGRESS_NS}" get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].port}')
export SECURE_INGRESS_PORT
if [ -z "$INGRESS_HOST" ]; then
    INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n "${INGRESS_NS}" -o jsonpath='{.items[0].status.hostIP}')
    export INGRESS_HOST
    INGRESS_PORT=$(kubectl -n "${INGRESS_NS}" get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
    export INGRESS_PORT
    SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
    export SECURE_INGRESS_PORT
fi
MINIKUBE_IP=$(minikube ip)
if [ -n "$MINIKUBE_IP" ]; then
    INGRESS_HOST=$(minikube ip)
    export INGRESS_HOST
    INGRESS_PORT=$(kubectl -n "${INGRESS_NS}" get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
    export INGRESS_PORT
    SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
    export SECURE_INGRESS_PORT
fi
export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
# $endsnippet

# Step 1: Route requests to v2 of the reviews service
# $snippet v2_reviews.sh syntax="bash"
$ kubectl apply -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: reviews
spec:
  hosts:
    - reviews
  http:
  - route:
    - destination:
        host: reviews
        subset: v2
EOF
# $endsnippet

# Step 2: Add a 2 second delay to calls to the ratings service
# $snippet delay_ratings.sh syntax="bash"
$ kubectl apply -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ratings
spec:
  hosts:
  - ratings
  http:
  - fault:
      delay:
        percent: 100
        fixedDelay: 2s
    route:
    - destination:
        host: ratings
        subset: v1
EOF
# $endsnippet

# Step 3: Verify 2s delay with ratings stars displayed
# $snippet verify_ratings_1.sh syntax="bash"
$ curl -sS http://"${GATEWAY_URL}"/productpage | grep -o ".*Reviewer1"
sleep 2
# $verify verifier="contains"
<small>Reviewer1
# $endsnippet
