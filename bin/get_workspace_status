#!/bin/bash

# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

function get_branch() {
    local branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"
    if [[ "${branch}" == 'HEAD' ]]; then
      branch="$(git show-ref | grep ${BUILD_GIT_REVISION}  \
        | grep -oP "refs/remotes/.*/\K.*" | grep -v -i head)" \
        || branch=''
    fi
    if [[ -n "${branch}" ]]; then
      echo "${branch}"
    else
      echo 'unknown'
    fi
}

BUILD_GIT_REVISION=$(git rev-parse HEAD 2> /dev/null)
if [[  $? == 0 ]]; then
    BRANCH="$(get_branch)"
    git diff-index --quiet HEAD
    if [[  $? != 0 ]]; then
        BUILD_GIT_REVISION=${BUILD_GIT_REVISION}"-dirty"
    fi
else
    BUILD_GIT_REVISION=unknown
    BRANCH=unknown
fi

# Check for local changes
git diff-index --quiet HEAD --
if [[ $? == 0 ]];
then
  tree_status="Clean"
else
  tree_status="Modified"
fi

# XXX This needs to be updated to accomodate tags added after building, rather than prior to builds
RELEASE_TAG=$(git describe --match '[0-9]*\.[0-9]*\.[0-9]*' --exact-match 2> /dev/null || echo "")

# security wanted VERSION='unknown'
VERSION="${BUILD_GIT_REVISION}"
if [[ -n "${RELEASE_TAG}" ]]; then
  VERSION="${RELEASE_TAG}"
elif [[ -n ${ISTIO_VERSION} ]]; then
  VERSION="${ISTIO_VERSION}"
fi

VERSION_MODULE=${1:-""}

# avoid associative map because MacOS cannot use BASH 4 by default
bv=(buildAppVersion buildGitRevision buildGitBranch buildUser buildHost)

# used by pilot/istioctl/security version package
buildAppVersion="${VERSION}"
buildGitRevision="${BUILD_GIT_REVISION}"
buildGitBranch="${BRANCH}"
buildUser="$(whoami)"
buildHost="$(hostname -f)"

bv+=(buildVersion buildStatus buildID)
# used by mixer/broker version package
buildVersion="${VERSION}"
buildStatus="${tree_status}"
buildID="$(date +%Y-%m-%d-$(git rev-parse --short HEAD))"

if [[ -z "${VERSION_MODULE}" ]];then
	# plain output
	for v in ${bv[@]}; do
		echo -n "$v="; eval echo \$$v
	done
else
	for v in ${bv[@]}; do
		echo -n "-X ${VERSION_MODULE}.$v=\""; eval echo -n \$$v; echo -n "\" "
	done
fi
