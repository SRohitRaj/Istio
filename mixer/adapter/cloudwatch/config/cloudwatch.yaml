# this config is created through command
# mixgen adapter -c $GOPATH/src/istio.io/istio/mixer/adapter/cloudwatch/config/config.proto_descriptor -o $GOPATH/src/istio.io/istio/mixer/adapter/cloudwatch/config -n cloudwatch -t metric
apiVersion: "config.istio.io/v1alpha2"
kind: adapter
metadata:
  name: cloudwatch
  namespace: istio-system
spec:
  description: 
  session_based: true
  templates:
  - metric
  config: Cv4sCixtaXhlci9hZGFwdGVyL2Nsb3Vkd2F0Y2gvY29uZmlnL2NvbmZpZy5wcm90bxIZYWRhcHRlci5jbG91ZHdhdGNoLmNvbmZpZyKvCAoGUGFyYW1zEhwKCW5hbWVzcGFjZRgBIAEoCVIJbmFtZXNwYWNlElIKC21ldHJpY19pbmZvGAIgAygLMjEuYWRhcHRlci5jbG91ZHdhdGNoLmNvbmZpZy5QYXJhbXMuTWV0cmljSW5mb0VudHJ5UgptZXRyaWNJbmZvEiQKDmxvZ19ncm91cF9uYW1lGAQgASgJUgxsb2dHcm91cE5hbWUSJgoPbG9nX3N0cmVhbV9uYW1lGAUgASgJUg1sb2dTdHJlYW1OYW1lEj8KBGxvZ3MYBiADKAsyKy5hZGFwdGVyLmNsb3Vkd2F0Y2guY29uZmlnLlBhcmFtcy5Mb2dzRW50cnlSBGxvZ3MabAoPTWV0cmljSW5mb0VudHJ5EhAKA2tleRgBIAEoCVIDa2V5EkMKBXZhbHVlGAIgASgLMi0uYWRhcHRlci5jbG91ZHdhdGNoLmNvbmZpZy5QYXJhbXMuTWV0cmljRGF0dW1SBXZhbHVlOgI4ARqbBAoLTWV0cmljRGF0dW0SRgoEdW5pdBgDIAEoDjIyLmFkYXB0ZXIuY2xvdWR3YXRjaC5jb25maWcuUGFyYW1zLk1ldHJpY0RhdHVtLlVuaXRSBHVuaXQiwwMKBFVuaXQSCAoETm9uZRAAEgsKB1NlY29uZHMQARIQCgxNaWNyb3NlY29uZHMQAhIQCgxNaWxsaXNlY29uZHMQAxIJCgVDb3VudBAEEgkKBUJ5dGVzEAUSDQoJS2lsb2J5dGVzEAYSDQoJTWVnYWJ5dGVzEAcSDQoJR2lnYWJ5dGVzEAgSDQoJVGVyYWJ5dGVzEAkSCAoEQml0cxAKEgwKCEtpbG9iaXRzEAsSDAoITWVnYWJpdHMQDBIMCghHaWdhYml0cxANEgwKCFRlcmFiaXRzEA4SCwoHUGVyY2VudBAPEhAKDEJ5dGVzX1NlY29uZBAQEhQKEEtpbG9ieXRlc19TZWNvbmQQERIUChBNZWdhYnl0ZXNfU2Vjb25kEBISFAoQR2lnYWJ5dGVzX1NlY29uZBATEhQKEFRlcmFieXRlc19TZWNvbmQQFBIPCgtCaXRzX1NlY29uZBAVEhMKD0tpbG9iaXRzX1NlY29uZBAWEhMKD01lZ2FiaXRzX1NlY29uZBAXEhMKD0dpZ2FiaXRzX1NlY29uZBAYEhMKD1RlcmFiaXRzX1NlY29uZBAZEhAKDENvdW50X1NlY29uZBAaGmIKCUxvZ3NFbnRyeRIQCgNrZXkYASABKAlSA2tleRI/CgV2YWx1ZRgCIAEoCzIpLmFkYXB0ZXIuY2xvdWR3YXRjaC5jb25maWcuUGFyYW1zLkxvZ0luZm9SBXZhbHVlOgI4ARo0CgdMb2dJbmZvEikKEHBheWxvYWRfdGVtcGxhdGUYASABKAlSD3BheWxvYWRUZW1wbGF0ZUIIWgZjb25maWdK7iMKBhIEDgBiAQq/BAoBDBIDDgASMrQEIENvcHlyaWdodCAyMDE4IElzdGlvIEF1dGhvcnMKCiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIFR5cGUsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCpsJCgECEgMkCCEaqAcgVGhlIENsb3VkV2F0Y2ggYWRhcHRlciBlbmFibGVzIElzdGlvIHRvIGRlbGl2ZXIgbWV0cmljcyB0bwogW0FtYXpvbiBDbG91ZFdhdGNoXShodHRwczovL2F3cy5hbWF6b24uY29tL2Nsb3Vkd2F0Y2gvKSBhbmQgbG9ncyB0bwogW0FtYXpvbiBDbG91ZFdhdGNoTG9nc10oaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FtYXpvbkNsb3VkV2F0Y2gvbGF0ZXN0L2xvZ3MvV2hhdElzQ2xvdWRXYXRjaExvZ3MuaHRtbC8pLgoKIFRvIHB1c2ggbWV0cmljcyBhbmQgbG9ncyB0byBDbG91ZFdhdGNoIHVzaW5nIHRoaXMgYWRhcHRlciB5b3UgbXVzdCBwcm92aWRlIEFXUyBjcmVkZW50aWFscyB0byB0aGUgQVdTIFNESy4KIChzZWUgW0FXUyBkb2NzXShodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vc2RrLWZvci1qYXZhL3YxL2RldmVsb3Blci1ndWlkZS9zZXR1cC1jcmVkZW50aWFscy5odG1sKSkuCgogVG8gYWN0aXZhdGUgdGhlIENsb3VkV2F0Y2ggYWRhcHRlciwgb3BlcmF0b3JzIG5lZWQgdG8gcHJvdmlkZSBjb25maWd1cmF0aW9uIGZvciB0aGUKIFtjbG91ZHdhdGNoIGFkYXB0ZXJdKGh0dHBzOi8vaXN0aW8uaW8vZG9jcy9yZWZlcmVuY2UvY29uZmlnL2FkYXB0ZXJzL2Nsb3Vkd2F0Y2guaHRtbCkuCgogVGhlIGhhbmRsZXIgY29uZmlndXJhdGlvbiBtdXN0IGNvbnRhaW4gdGhlIHNhbWUgbWV0cmljcyBhcyB0aGUgaW5zdGFuY2UgY29uZmlndXJhdGlvbi4KIFRoZSBtZXRyaWNzIHNwZWNpZmllZCBpbiBib3RoIGluc3RhbmNlIGFuZCBoYW5kbGVyIGNvbmZpZ3VyYXRpb25zIHdpbGwgYmUgc2VudCB0byBDbG91ZFdhdGNoLgoKIFRoaXMgYWRhcHRlciBzdXBwb3J0cyB0aGUgW21ldHJpYyB0ZW1wbGF0ZV0oaHR0cHM6Ly9pc3Rpby5pby9kb2NzL3JlZmVyZW5jZS9jb25maWcvcG9saWN5LWFuZC10ZWxlbWV0cnkvdGVtcGxhdGVzL21ldHJpYy8pLgoy5QEgJHRpdGxlOiBDbG91ZFdhdGNoCiAkZGVzY3JpcHRpb246IEFkYXB0ZXIgZm9yIGNsb3Vkd2F0Y2ggbWV0cmljcy4KICRsb2NhdGlvbjogaHR0cHM6Ly9pc3Rpby5pby9kb2NzL3JlZmVyZW5jZS9jb25maWcvcG9saWN5LWFuZC10ZWxlbWV0cnkvYWRhcHRlcnMvY2xvdWR3YXRjaC5odG1sCiAkYWxpYXNlczoKICQgIC0gL2RvY3MvcmVmZXJlbmNlL2NvbmZpZy9hZGFwdGVycy9jbG91ZHdhdGNoLmh0bWwKCggKAQgSAyYAGwoLCgQI5wcAEgMmABsKDAoFCOcHAAISAyYHEQoNCgYI5wcAAgASAyYHEQoOCgcI5wcAAgABEgMmBxEKDAoFCOcHAAcSAyYSGgo5CgIEABIEKQBiARotIENvbmZpZ3VyYXRpb24gZm9yIHRoZSBgY2xvdWR3YXRjaGAgYWRhcHRlci4KCgoKAwQAARIDKQgOCisKBAQAAgASAysEGRoeIENsb3VkV2F0Y2ggbWV0cmljIG5hbWVzcGFjZS4KCg0KBQQAAgAEEgQrBCkQCgwKBQQAAgAFEgMrBAoKDAoFBAACAAESAysLFAoMCgUEAAIAAxIDKxcYCkQKBAQAAgESAy4ELRo3IEEgbWFwIG9mIElzdGlvIG1ldHJpYyBuYW1lIHRvIENsb3VkV2F0Y2ggbWV0cmljIGluZm8uCgoNCgUEAAIBBBIELgQrGQoMCgUEAAIBBhIDLgQcCgwKBQQAAgEBEgMuHSgKDAoFBAACAQMSAy4rLAopCgQEAAMBEgQxBFIFGhsgQ2xvdWRXYXRjaCBtZXRyaWMgZm9ybWF0LgoKDAoFBAADAQESAzEMFwoOCgYEAAMBBAASBDIGTgcKDgoHBAADAQQAARIDMgsPCg8KCAQAAwEEAAIAEgMzCBEKEAoJBAADAQQAAgABEgMzCAwKEAoJBAADAQQAAgACEgMzDxAKDwoIBAADAQQAAgESAzQIFAoQCgkEAAMBBAACAQESAzQIDwoQCgkEAAMBBAACAQISAzQSEwoPCggEAAMBBAACAhIDNQgZChAKCQQAAwEEAAICARIDNQgUChAKCQQAAwEEAAICAhIDNRcYCg8KCAQAAwEEAAIDEgM2CBkKEAoJBAADAQQAAgMBEgM2CBQKEAoJBAADAQQAAgMCEgM2FxgKDwoIBAADAQQAAgQSAzcIEgoQCgkEAAMBBAACBAESAzcIDQoQCgkEAAMBBAACBAISAzcQEQoPCggEAAMBBAACBRIDOAgSChAKCQQAAwEEAAIFARIDOAgNChAKCQQAAwEEAAIFAhIDOBARCg8KCAQAAwEEAAIGEgM5CBYKEAoJBAADAQQAAgYBEgM5CBEKEAoJBAADAQQAAgYCEgM5FBUKDwoIBAADAQQAAgcSAzoIFgoQCgkEAAMBBAACBwESAzoIEQoQCgkEAAMBBAACBwISAzoUFQoPCggEAAMBBAACCBIDOwgWChAKCQQAAwEEAAIIARIDOwgRChAKCQQAAwEEAAIIAhIDOxQVCg8KCAQAAwEEAAIJEgM8CBYKEAoJBAADAQQAAgkBEgM8CBEKEAoJBAADAQQAAgkCEgM8FBUKDwoIBAADAQQAAgoSAz0IEgoQCgkEAAMBBAACCgESAz0IDAoQCgkEAAMBBAACCgISAz0PEQoPCggEAAMBBAACCxIDPggWChAKCQQAAwEEAAILARIDPggQChAKCQQAAwEEAAILAhIDPhMVCg8KCAQAAwEEAAIMEgM/CBYKEAoJBAADAQQAAgwBEgM/CBAKEAoJBAADAQQAAgwCEgM/ExUKDwoIBAADAQQAAg0SA0AIFgoQCgkEAAMBBAACDQESA0AIEAoQCgkEAAMBBAACDQISA0ATFQoPCggEAAMBBAACDhIDQQgWChAKCQQAAwEEAAIOARIDQQgQChAKCQQAAwEEAAIOAhIDQRMVCg8KCAQAAwEEAAIPEgNCCBUKEAoJBAADAQQAAg8BEgNCCA8KEAoJBAADAQQAAg8CEgNCEhQKDwoIBAADAQQAAhASA0MIGgoQCgkEAAMBBAACEAESA0MIFAoQCgkEAAMBBAACEAISA0MXGQoPCggEAAMBBAACERIDRAgeChAKCQQAAwEEAAIRARIDRAgYChAKCQQAAwEEAAIRAhIDRBsdCg8KCAQAAwEEAAISEgNFCB4KEAoJBAADAQQAAhIBEgNFCBgKEAoJBAADAQQAAhICEgNFGx0KDwoIBAADAQQAAhMSA0YIHgoQCgkEAAMBBAACEwESA0YIGAoQCgkEAAMBBAACEwISA0YbHQoPCggEAAMBBAACFBIDRwgeChAKCQQAAwEEAAIUARIDRwgYChAKCQQAAwEEAAIUAhIDRxsdCg8KCAQAAwEEAAIVEgNICBkKEAoJBAADAQQAAhUBEgNICBMKEAoJBAADAQQAAhUCEgNIFhgKDwoIBAADAQQAAhYSA0kIHQoQCgkEAAMBBAACFgESA0kIFwoQCgkEAAMBBAACFgISA0kaHAoPCggEAAMBBAACFxIDSggdChAKCQQAAwEEAAIXARIDSggXChAKCQQAAwEEAAIXAhIDShocCg8KCAQAAwEEAAIYEgNLCB0KEAoJBAADAQQAAhgBEgNLCBcKEAoJBAADAQQAAhgCEgNLGhwKDwoIBAADAQQAAhkSA0wIHQoQCgkEAAMBBAACGQESA0wIFwoQCgkEAAMBBAACGQISA0waHAoPCggEAAMBBAACGhIDTQgaChAKCQQAAwEEAAIaARIDTQgUChAKCQQAAwEEAAIaAhIDTRcZCrgBCgYEAAMBAgASA1EGFBqoASBUaGUgdW5pdCBvZiB0aGUgbWV0cmljLiBNdXN0IGJlIHZhbGlkIGNsb3Vkd2F0Y2ggdW5pdCB2YWx1ZS4KIFtDbG91ZFdhdGNoIGRvY3NdKGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BbWF6b25DbG91ZFdhdGNoL2xhdGVzdC9BUElSZWZlcmVuY2UvQVBJX01ldHJpY0RhdHVtLmh0bWwpCgoPCgcEAAMBAgAEEgRRBk4HCg4KBwQAAwECAAYSA1EGCgoOCgcEAAMBAgABEgNRCw8KDgoHBAADAQIAAxIDURITCjsKBAQAAgISA1UEHhouIFRoZSBuYW1lIG9mIHRoZSBsb2cgZ3JvdXAgaW4gY2xvdWR3YXRjaGxvZ3MuCgoNCgUEAAICBBIEVQRSBQoMCgUEAAICBRIDVQQKCgwKBQQAAgIBEgNVCxkKDAoFBAACAgMSA1UcHQo8CgQEAAIDEgNYBB8aLyBUaGUgbmFtZSBvZiB0aGUgbG9nIHN0cmVhbSBpbiBjbG91ZHdhdGNobG9ncy4KCg0KBQQAAgMEEgRYBFUeCgwKBQQAAgMFEgNYBAoKDAoFBAACAwESA1gLGgoMCgUEAAIDAxIDWB0eCkgKBAQAAgQSA1sEIho7IEEgbWFwIG9mIElzdGlvIGxvZ2VudHJ5IG5hbWUgdG8gQ2xvdWRXYXRjaCBsb2dlbnRyeSBpbmZvLgoKDQoFBAACBAQSBFsEWB8KDAoFBAACBAYSA1sEGAoMCgUEAAIEARIDWxkdCgwKBQQAAgQDEgNbICEKDAoEBAADAxIEXQRhBQoMCgUEAAMDARIDXQwTCswBCgYEAAMDAgASA2AGIhq8ASBBIGdvbGFuZyB0ZXh0L3RlbXBsYXRlIHRlbXBsYXRlIHRoYXQgd2lsbCBiZSBleGVjdXRlZCB0byBjb25zdHJ1Y3QgdGhlIHBheWxvYWQgZm9yIHRoaXMgbG9nIGVudHJ5LgogSXQgd2lsbCBiZSBnaXZlbiB0aGUgZnVsbCBzZXQgb2YgdmFyaWFibGVzIGZvciB0aGUgbG9nIHRvIHVzZSB0byBjb25zdHJ1Y3QgaXRzIHJlc3VsdC4KCg8KBwQAAwMCAAQSBGAGXRQKDgoHBAADAwIABRIDYAYMCg4KBwQAAwMCAAESA2ANHQoOCgcEAAMDAgADEgNgICFiBnByb3RvMw==
---
