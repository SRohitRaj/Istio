apiVersion: "config.istio.io/v1alpha2"
kind: stdio
metadata:
  name: handler
  namespace: istio-system
spec:
  outputAsJson: true
---
apiVersion: "config.istio.io/v1alpha2"
kind: stdio
metadata:
  name: directhandler
  namespace: istio-system
spec:
  outputAsJson: false
---
apiVersion: "config.istio.io/v1alpha2"
kind: logentry
metadata:
  name: accesslog
  namespace: istio-system
spec:
  severity: '"Default"'
  timestamp: request.time
  variables:
    sourceIp: source.ip | ip("0.0.0.0")
    destinationService: destination.service | "unknown"
    destinationIp: destination.ip | ip("0.0.0.0")
    sourceUser: source.user | ""
    method: request.method | ""
    url: request.path | ""
    protocol: request.scheme | "http"
    responseCode: response.code | 0
    responseSize: response.size | 0
    requestSize: request.size | 0
    latency: response.duration | "0ms"
  monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: logentry
metadata:
  name: directaccesslog
  namespace: istio-system
spec:
  severity: '"Default"'
  timestamp: io.prometheus.client.metric.timestamp
  variables:
    nodeID: envoy.api.v2.core.node.id | "unknown"
    cluster: envoy.api.v2.core.node.cluster | "unknown"
    metricName: io.prometheus.client.metricfamily.name | "unknown"
    metricType: io.prometheus.client.metricfamily.kind | "unknown"
    metricValue: io.prometheus.client.metric.counter.value | io.prometheus.client.metric.gauge.value | 0.0 
  monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: stdio
  namespace: istio-system
spec:
  match: match(context.protocol, "http*") 
  actions:
  - handler: handler.stdio
    instances:
    - accesslog.logentry
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: directstdio
  namespace: istio-system
spec:
  match: match(context.protocol, "envoy*")
  actions:
  - handler: directhandler.stdio
    instances:
    - directaccesslog.logentry
