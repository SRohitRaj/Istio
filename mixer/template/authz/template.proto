// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package authz;

import "mixer/v1/config/descriptor/value_type.proto";
import "mixer/v1/template/extensions.proto";

option (istio.mixer.v1.template.template_variety) = TEMPLATE_VARIETY_CHECK;

message Subject {
  // The user.
  string user = 1;
  // Groups the subject belongs to.
  repeated string groups = 2;
  // Additional attributes about the subject.
  map<string, istio.mixer.v1.config.descriptor.ValueType> extra = 3;
}

message Action {
  // Namespace the target action is taking place in.
  string namespace = 1;
  // The Service the action is being taken on.
  string service = 2;
  // The what action is being taken.
  string method = 3;
  // The resource within the service.
  string path = 4;
  // Additional data about the action for use in policy.
  map<string, istio.mixer.v1.config.descriptor.ValueType> extra = 5;
}

// authz template defines subject and action. Adapters using authz template
// should validate “subject” allowed to do an “action”.
//
// When writing the configuration, the value for the fields associated with this template can either be a
// literal or an [expression](https://istio.io/docs/reference/config/mixer/expression-language.html).
// Please note that if the datatype of a field is not istio.mixer.v1.config.descriptor.ValueType,
// then the expression's [inferred type](https://istio.io/docs/reference/config/mixer/expression-language.html#type-checking)
// must match the datatype of the field.
//
// Example config:
// apiVersion: "config.istio.io/v1alpha2"
// kind: authz
// metadata:
//   name: authinfo
//   namespace: istio-system
// Spec:
//  subject:
//    user: source.user | request.auth.token[user] | ""
//    groups: request.auth.token[groups]
//    extra:
//     iss: request.auth.token["iss"]
//  action:
//    namespace: target.namespace | "default"
//    service: target.service | ""
//    path: request.path | "/"
//    method: request.method | "post"
//    extra:
//      version: destination.labels[version] | ""
message Template {
  Subject subject = 1;
  Action action = 2;
}
