// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: distrib/mixerconfig.proto

/*
Package distrib is a generated protocol buffer package.

It is generated from these files:
	distrib/mixerconfig.proto

It has these top-level messages:
	MixerConfig
	Rule
	Action
	Instance
	Handler
	Connection
*/
package distrib

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MixerConfig struct {
	Id        string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rules     []*Rule     `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	Instances []*Instance `protobuf:"bytes,3,rep,name=instances" json:"instances,omitempty"`
	Handler   []*Handler  `protobuf:"bytes,4,rep,name=handler" json:"handler,omitempty"`
}

func (m *MixerConfig) Reset()                    { *m = MixerConfig{} }
func (m *MixerConfig) String() string            { return proto.CompactTextString(m) }
func (*MixerConfig) ProtoMessage()               {}
func (*MixerConfig) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{0} }

func (m *MixerConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MixerConfig) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *MixerConfig) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *MixerConfig) GetHandler() []*Handler {
	if m != nil {
		return m.Handler
	}
	return nil
}

type Rule struct {
	Match   string    `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Actions []*Action `protobuf:"bytes,2,rep,name=actions" json:"actions,omitempty"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{1} }

func (m *Rule) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *Rule) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type Action struct {
	Handler   string   `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	Instances []string `protobuf:"bytes,3,rep,name=instances" json:"instances,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{2} }

func (m *Action) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *Action) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type Instance struct {
	Name     string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Template string                  `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Params   interface{} `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{3} }

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Instance) GetParams() interface{} {
	if m != nil {
		return m.Params
	}
	return nil
}

type Handler struct {
	Name       string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Adapter    string                  `protobuf:"bytes,2,opt,name=adapter,proto3" json:"adapter,omitempty"`
	Params     interface{} `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	Connection *Connection             `protobuf:"bytes,4,opt,name=connection" json:"connection,omitempty"`
}

func (m *Handler) Reset()                    { *m = Handler{} }
func (m *Handler) String() string            { return proto.CompactTextString(m) }
func (*Handler) ProtoMessage()               {}
func (*Handler) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{4} }

func (m *Handler) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Handler) GetAdapter() string {
	if m != nil {
		return m.Adapter
	}
	return ""
}

func (m *Handler) GetParams() interface{} {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Handler) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type Connection struct {
	// The address of the backend.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *Connection) Reset()                    { *m = Connection{} }
func (m *Connection) String() string            { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()               {}
func (*Connection) Descriptor() ([]byte, []int) { return fileDescriptorMixerconfig, []int{5} }

func (m *Connection) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*MixerConfig)(nil), "istio.distrib.mixer.MixerConfig")
	proto.RegisterType((*Rule)(nil), "istio.distrib.mixer.Rule")
	proto.RegisterType((*Action)(nil), "istio.distrib.mixer.Action")
	proto.RegisterType((*Instance)(nil), "istio.distrib.mixer.Instance")
	proto.RegisterType((*Handler)(nil), "istio.distrib.mixer.Handler")
	proto.RegisterType((*Connection)(nil), "istio.distrib.mixer.Connection")
}

func init() { proto.RegisterFile("distrib/mixerconfig.proto", fileDescriptorMixerconfig) }

var fileDescriptorMixerconfig = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xbf, 0xce, 0xd3, 0x30,
	0x14, 0xc5, 0x95, 0x7c, 0x69, 0xd3, 0xde, 0x4a, 0x0c, 0x06, 0x89, 0xb4, 0x14, 0x51, 0x45, 0x02,
	0x3a, 0xd9, 0x52, 0x11, 0x2c, 0x0c, 0xfc, 0xe9, 0x02, 0x03, 0x8b, 0xbb, 0xb1, 0xb9, 0x89, 0x9b,
	0x5a, 0x4d, 0xec, 0xc8, 0x76, 0x24, 0x78, 0x24, 0x9e, 0x83, 0x17, 0x43, 0xb5, 0x9d, 0xa6, 0x42,
	0x59, 0xbe, 0xcd, 0x37, 0xf9, 0x9d, 0x73, 0xcf, 0xb1, 0x61, 0x59, 0x0a, 0x63, 0xb5, 0x38, 0x92,
	0x46, 0xfc, 0xe2, 0xba, 0x50, 0xf2, 0x24, 0x2a, 0xdc, 0x6a, 0x65, 0x15, 0x7a, 0x2a, 0x8c, 0x15,
	0x0a, 0x07, 0x00, 0x3b, 0x60, 0xb5, 0xae, 0x94, 0xaa, 0x6a, 0x4e, 0x1c, 0x72, 0xec, 0x4e, 0xc4,
	0x58, 0xdd, 0x15, 0xd6, 0x4b, 0xf2, 0xbf, 0x11, 0x2c, 0x7e, 0x5c, 0xb9, 0xbd, 0x33, 0x42, 0x4f,
	0x20, 0x16, 0x65, 0x16, 0x6d, 0xa2, 0xed, 0x9c, 0xc6, 0xa2, 0x44, 0x04, 0x26, 0xba, 0xab, 0xb9,
	0xc9, 0xe2, 0xcd, 0xc3, 0x76, 0xb1, 0x5b, 0xe2, 0x91, 0x15, 0x98, 0x76, 0x35, 0xa7, 0x9e, 0x43,
	0x1f, 0x61, 0x2e, 0xa4, 0xb1, 0x4c, 0x16, 0xdc, 0x64, 0x0f, 0x4e, 0xf4, 0x72, 0x54, 0xf4, 0x3d,
	0x50, 0x74, 0xe0, 0xd1, 0x07, 0x48, 0xcf, 0x4c, 0x96, 0x35, 0xd7, 0x59, 0xe2, 0xa4, 0xeb, 0x51,
	0xe9, 0x37, 0xcf, 0xd0, 0x1e, 0xce, 0x0f, 0x90, 0x5c, 0x33, 0xa0, 0x67, 0x30, 0x69, 0x98, 0x2d,
	0xce, 0xa1, 0x80, 0x1f, 0xd0, 0x7b, 0x48, 0x59, 0x61, 0x85, 0x92, 0x7d, 0x8b, 0x17, 0xa3, 0xae,
	0x5f, 0x1c, 0x43, 0x7b, 0x36, 0xff, 0x0c, 0x53, 0xff, 0x09, 0x65, 0x43, 0xac, 0xd8, 0x19, 0xf7,
	0x23, 0x5a, 0xff, 0xdf, 0x76, 0x7e, 0x57, 0x27, 0xbf, 0xc0, 0xac, 0x6f, 0x89, 0x10, 0x24, 0x92,
	0x35, 0x3c, 0x24, 0x73, 0x67, 0xb4, 0x82, 0x99, 0xe5, 0x4d, 0x5b, 0x33, 0xcb, 0x83, 0xf1, 0x6d,
	0x46, 0x04, 0xa6, 0x2d, 0xd3, 0xac, 0xb9, 0xda, 0x46, 0xdb, 0xc5, 0xee, 0x39, 0xf6, 0xef, 0x88,
	0xfb, 0x77, 0xc4, 0x07, 0xf7, 0x8e, 0x34, 0x60, 0xf9, 0x9f, 0x08, 0xd2, 0x70, 0x31, 0xa3, 0xcb,
	0x32, 0x48, 0x59, 0xc9, 0x5a, 0x3b, 0x94, 0x08, 0xe3, 0xa3, 0x57, 0xa1, 0x4f, 0x00, 0x85, 0x92,
	0x92, 0xbb, 0xdb, 0xc9, 0x12, 0x27, 0x7a, 0x35, 0x7a, 0xa7, 0xfb, 0x1b, 0x46, 0xef, 0x24, 0xf9,
	0x1b, 0x80, 0xe1, 0x8f, 0x4f, 0x56, 0x6a, 0x6e, 0xcc, 0x90, 0xcc, 0x8d, 0x5f, 0xdf, 0xfe, 0x7c,
	0xed, 0x5d, 0x85, 0x22, 0xee, 0x40, 0x2a, 0x56, 0xd7, 0xfc, 0x37, 0x69, 0x2f, 0x15, 0x61, 0xad,
	0x20, 0x61, 0xdb, 0x71, 0xea, 0xa2, 0xbe, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xfd, 0x81,
	0xc9, 0x1d, 0x03, 0x00, 0x00,
}
