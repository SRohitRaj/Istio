apiVersion: v1
kind: Namespace
metadata:
  name: ha-demo
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Namespace
metadata:
  name: client
  labels:
    istio-injection: disabled
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: front-envoy
  namespace: ha-demo
data:
  front-envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/article"
                    route:
                      cluster: article
                  - match:
                      prefix: "/healthz"
                    direct_response:
                      status: 200
              http_filters:
              - name: envoy.router
                config: {}

      clusters:
      - name: article
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: article
            port_value: 80
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: news
  namespace: ha-demo
spec:
  selector:
    app: news
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: news
  namespace: ha-demo
spec:
  selector:
    matchLabels:
      app: news
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: news
    
    spec:
      containers:
      - name: envoy
        command: ["/usr/local/bin/envoy", "-c", "/etc/config/front-envoy.yaml", "--base-id", "1", "--service-cluster", "x", "--max-obj-name-len", "200"]
        image: istio/proxyv2:1.1.7
        lifecycle:
          preStop:
            exec:
              command: [
                # Delay shutdown
                "sleep", "2"
              ]
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
      volumes:
      - name: config-volume
        configMap:
          name: front-envoy
      restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: back-envoy
  namespace: ha-demo
data:
  back-envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/article"
                    direct_response:
                      status: 200
                      body: 
                        inline_string: "Weather forecast: Sunny and cloudless.\n"
                  - match:
                      prefix: "/healthz"
                    direct_response:
                      status: 200
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: article #TODO needed???
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: article
            port_value: 80
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: article
  namespace: ha-demo
spec:
  selector:
    app: article
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: article-v2
  namespace: ha-demo
spec:
  selector:
    app: article-v2
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: article-v2
  namespace: ha-demo
spec:
  selector:
    matchLabels:
      app: article-v2
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: article-v2
    spec:
      containers:
      - name: envoy
        command: ["/usr/local/bin/envoy", "-c", "/etc/config/back-envoy.yaml", "--base-id", "1", "--service-cluster", "x", "--max-obj-name-len", "200"]
        image: istio/proxyv2:1.1.7
        lifecycle:
          preStop:
            exec:
              command: [
                # Delay SIGTERM
                "sleep", "2"
              ]
        readinessProbe:
          httpGet:
            path: /article
            port: 80
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
      volumes:
      - name: config-volume
        configMap:
          name: back-envoy
      restartPolicy: Always
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: ha-demo
  name: latest-article
spec:
  hosts:
  - article.ha-demo.svc.cluster.local
  tcp:
  - match:
    - destinationSubnets:
      - 0.0.0.0 #IP of article service
    route:
    - destination:
        host: article-v2.ha-demo.svc.cluster.local
        port:
          number: 80