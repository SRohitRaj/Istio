#
# addon kiali
#
kiali:
  enabled: false # Installs the Kiali CR. If you do not want Kiali, you probably also want to disable the operator (kiali.operator.enabled)

  nodeSelector: {}
  podAnnotations: {}
  resources: {}
  tolerations: []
  replicaCount: 1

  createDemoSecret: false # When true, a secret will be created with a default username and password. Useful for demos.

  # Specify the pod anti-affinity that allows you to constrain which nodes
  # your pod is eligible to be scheduled based on labels on pods that are
  # already running on the node rather than based on labels on nodes.
  # There are currently two types of anti-affinity:
  #    "requiredDuringSchedulingIgnoredDuringExecution"
  #    "preferredDuringSchedulingIgnoredDuringExecution"
  # which denote "hard" vs. "soft" requirements, you can define your values
  # in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
  # correspondingly.
  # For example:
  # podAntiAffinityLabelSelector:
  # - key: security
  #   operator: In
  #   values: S1,S2
  #   topologyKey: "kubernetes.io/hostname"
  # This pod anti-affinity rule says that the pod requires not to be scheduled
  # onto a node if that node is already running a pod with label having key
  # "security" and value "S1".
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []

  service:
    annotations: {}
    type: ClusterIP

  accessibleNamespaces: ['**']
  contextPath: /kiali # The root context path to access the Kiali UI.

  dashboard:
    auth:
      strategy: login # Can be anonymous, login, openshift, or ldap
      # ldap: # This is required to use the ldap strategy
      #   ldap_base: "DC=example,DC=com"
      #   ldap_bind_dn: "CN={USERID},OU=xyz,OU=Users,OU=Accounts,DC=example,DC=com"
      #   ldap_group_filter: "(cn=%s)"
      #   ldap_host: "ldap-service.ldap-namespace"
      #   ldap_insecure_skip_verify: true
      #   ldap_mail_id_key: "mail"
      #   ldap_member_of_key: "memberOf"
      #   ldap_port: 123
      #   ldap_role_filter: ".*xyz.*"
      #   ldap_search_filter: "(&(name={USERID}))"
      #   ldap_use_ssl: false
      #   ldap_user_filter: "(cn=%s)"
      #   ldap_user_id_key: "cn"

    secretName: kiali # You must create a secret with this name - one is not provided out-of-box unless you've chose to create a demo secret.

    viewOnlyMode: false # Bind the service account to a role with only read access

    grafanaURL: "" # If you have Grafana installed and it is accessible to client browsers, then set this to its external URL. Kiali will redirect users to this URL when Grafana metrics are to be shown.
    grafanaInClusterURL: "http://grafana:3000" # In Kubernetes cluster with ELB in front this option is needed, since public IP of ELB is not reachable from inside the cluster
    jaegerURL: "" # If you have Jaeger installed and it is accessible to client browsers, then set this property to its external URL. Kiali will redirect users to this URL when Jaeger tracing is to be shown.
    jaegerInClusterURL: "http://tracing/jaeger" # If you have Jaeger installed and accessible from Kiali pod (typically in cluster), then set this property to enable more tracing charts within Kiali.

  prometheusAddr: ""

  security:
    enabled: false

  excludedWorkloads:
    - "CronJob"
    - "Job"
  # Other options are:
  #  - DeploymentConfig
  #  - ReplicationController
  #  - StatefulSet

  # Until https://github.com/helm/helm/pull/6876 is available, the only way to really support
  # a fully customized Kiali CR is to be able to pass the full spec here. If this is defined,
  # most of the settings above will be ignored and this is used for the Kiali CR spec.
  # See https://github.com/kiali/kiali/blob/master/operator/deploy/kiali/kiali_cr.yaml
  # for what a Kiali CR spec can look like.
  fullSpec: {}

  # If the cluster does not already have a Kiali Operator, this provides a way to give you one.
  # The operator will go in the control namespace itself (.Release.Namespace) and will watch only that namespace for CRs.
  operator:
    enabled: false # This installs the operator if `true`. Set to false if the operator is already installed or you do not want Kiali
    hub: quay.io/kiali
    image: kiali-operator
    tag: v1.15
    nodeSelector: {}
    podAnnotations: {}
    resources: {}
    tolerations: []
