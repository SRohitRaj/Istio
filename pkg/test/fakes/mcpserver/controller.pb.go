// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package mcpserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1alpha1 "istio.io/api/mcp/v1alpha1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CollectionStateRequest struct {
	Collection           string   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionStateRequest) Reset()         { *m = CollectionStateRequest{} }
func (m *CollectionStateRequest) String() string { return proto.CompactTextString(m) }
func (*CollectionStateRequest) ProtoMessage()    {}
func (*CollectionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_4a16ba59a84aeece, []int{0}
}
func (m *CollectionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionStateRequest.Unmarshal(m, b)
}
func (m *CollectionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionStateRequest.Marshal(b, m, deterministic)
}
func (dst *CollectionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionStateRequest.Merge(dst, src)
}
func (m *CollectionStateRequest) XXX_Size() int {
	return xxx_messageInfo_CollectionStateRequest.Size(m)
}
func (m *CollectionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionStateRequest proto.InternalMessageInfo

func (m *CollectionStateRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type CollectionStateResponse struct {
	Resources            []*v1alpha1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CollectionStateResponse) Reset()         { *m = CollectionStateResponse{} }
func (m *CollectionStateResponse) String() string { return proto.CompactTextString(m) }
func (*CollectionStateResponse) ProtoMessage()    {}
func (*CollectionStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_4a16ba59a84aeece, []int{1}
}
func (m *CollectionStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionStateResponse.Unmarshal(m, b)
}
func (m *CollectionStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionStateResponse.Marshal(b, m, deterministic)
}
func (dst *CollectionStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionStateResponse.Merge(dst, src)
}
func (m *CollectionStateResponse) XXX_Size() int {
	return xxx_messageInfo_CollectionStateResponse.Size(m)
}
func (m *CollectionStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionStateResponse proto.InternalMessageInfo

func (m *CollectionStateResponse) GetResources() []*v1alpha1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func init() {
	proto.RegisterType((*CollectionStateRequest)(nil), "CollectionStateRequest")
	proto.RegisterType((*CollectionStateResponse)(nil), "CollectionStateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// McpSinkControllerServiceClient is the client API for McpSinkControllerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type McpSinkControllerServiceClient interface {
	GetCollectionState(ctx context.Context, in *CollectionStateRequest, opts ...grpc.CallOption) (*CollectionStateResponse, error)
}

type mcpSinkControllerServiceClient struct {
	cc *grpc.ClientConn
}

func NewMcpSinkControllerServiceClient(cc *grpc.ClientConn) McpSinkControllerServiceClient {
	return &mcpSinkControllerServiceClient{cc}
}

func (c *mcpSinkControllerServiceClient) GetCollectionState(ctx context.Context, in *CollectionStateRequest, opts ...grpc.CallOption) (*CollectionStateResponse, error) {
	out := new(CollectionStateResponse)
	err := c.cc.Invoke(ctx, "/McpSinkControllerService/GetCollectionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// McpSinkControllerServiceServer is the server API for McpSinkControllerService service.
type McpSinkControllerServiceServer interface {
	GetCollectionState(context.Context, *CollectionStateRequest) (*CollectionStateResponse, error)
}

func RegisterMcpSinkControllerServiceServer(s *grpc.Server, srv McpSinkControllerServiceServer) {
	s.RegisterService(&_McpSinkControllerService_serviceDesc, srv)
}

func _McpSinkControllerService_GetCollectionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McpSinkControllerServiceServer).GetCollectionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/McpSinkControllerService/GetCollectionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McpSinkControllerServiceServer).GetCollectionState(ctx, req.(*CollectionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _McpSinkControllerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "McpSinkControllerService",
	HandlerType: (*McpSinkControllerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCollectionState",
			Handler:    _McpSinkControllerService_GetCollectionState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller.proto",
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_controller_4a16ba59a84aeece) }

var fileDescriptor_controller_4a16ba59a84aeece = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x48, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xc9, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0x92, 0xce, 0x4d,
	0x2e, 0xd0, 0x2f, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0x34, 0xd4, 0x2f, 0x4a, 0x2d, 0xce, 0x2f,
	0x2d, 0x4a, 0x4e, 0x85, 0x48, 0x2a, 0x59, 0x70, 0x89, 0x39, 0x83, 0x14, 0x27, 0x97, 0x64, 0xe6,
	0xe7, 0x05, 0x97, 0x24, 0x96, 0xa4, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x71,
	0x71, 0x25, 0xc3, 0x65, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x44, 0x94, 0x42, 0xb9,
	0xc4, 0x31, 0x74, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x59, 0x71, 0x71, 0xc2, 0xac, 0x29,
	0x06, 0xea, 0x64, 0xd6, 0xe0, 0x36, 0x92, 0xd1, 0xcb, 0x2c, 0x06, 0x2a, 0xd4, 0x03, 0xba, 0x45,
	0x0f, 0xe6, 0x16, 0xbd, 0x20, 0xa8, 0xa2, 0x20, 0x84, 0x72, 0xa3, 0x54, 0x2e, 0x09, 0xdf, 0xe4,
	0x82, 0xe0, 0xcc, 0xbc, 0x6c, 0x67, 0xb8, 0x47, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85,
	0x3c, 0xb9, 0x84, 0xdc, 0x53, 0x4b, 0xd0, 0x6c, 0x15, 0x12, 0xd7, 0xc3, 0xee, 0x03, 0x29, 0x09,
	0x3d, 0x1c, 0x0e, 0x54, 0x62, 0x70, 0xe2, 0x8e, 0xe2, 0x04, 0x3a, 0xa5, 0x18, 0x68, 0x70, 0x6a,
	0x51, 0x12, 0x1b, 0x38, 0x2c, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x03, 0x8b, 0xa9, 0xa9,
	0x3c, 0x01, 0x00, 0x00,
}
