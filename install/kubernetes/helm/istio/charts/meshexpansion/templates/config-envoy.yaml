apiVersion: v1
kind: ConfigMap
metadata:
  name: meshexpansion-envoy-config
  namespace: {{ .Release.Namespace }}
data:
  envoy.yaml: |
    node:
      id: ingres~~istio-mesh~istio-system.svc.cluster.local
      cluster: meshexp
    stats_config:
      use_all_default_tags: false

    admin:
      access_log_path: /dev/stdout
      address:
        # Only allow debugging from localhost
        socket_address: { address: 127.0.0.1, port_value: 15000 }

    dynamic_resources:
      lds_config: {"ads": {}}
      cds_config: {"ads": {}}
      ads_config:
        api_type: GRPC
        refresh_delay: 10s
        cluster_names: [xds-grpc]

    static_resources:
      listeners:
      # The ports are in 16000 range - to not interfere with pilot generated listeners

      # Envoy v1 - for backward compat with 0.2 LTS
      - name: tcp-zvpn-pilot-8080
        address:
          socket_address: { address: 0.0.0.0, port_value: 16001 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: tcp_pilot
                cluster: zvpn.pilot

      # Envoy grpc v2 + TLS
      - name: tcp-zvpn-pilots
        address:
          socket_address: { address: 0.0.0.0, port_value: 16002 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: tcp_pilot
                cluster: zvpn.pilots

      - name: tcp-zvpn-ca
        address:
          socket_address: { address: 0.0.0.0, port_value: 16003 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: tcp_ca
                cluster: zvpn.ca

      - name: tcp-zvpn-mixer
        address:
          socket_address: { address: 0.0.0.0, port_value: 16004 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: tcp-mixer
                cluster: zvpn.mixer

      - name: tcp-zvpn-dns
        address:
          socket_address: { address: 0.0.0.0, port_value: 16005 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: tcp_dns
                cluster: zvpn.dns

{{ if .Values.zvpn }}
{{- range $app := .Values.zvpn.apps }}
      - name: tcp-zvpn-{{ $app.portName }}
        address:
          socket_address: { address: 0.0.0.0, port_value: {{ $app.externalPort }} }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
                stat_prefix: {{ $app.portName }}
                cluster: zvpn.{{ $app.portName }}
{{ end }}
{{ end }}
      clusters:
      - name: xds-grpc
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        hosts:
          # TODO(costin): add TLS/15011
          - { socket_address: { address: "istio-pilot.istio-system", port_value: 15010 }}

      # Upgrade from 0.2 LTS, only exposed on internal load balancer.
      - name: zvpn.pilot-8080
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        lb_policy: ROUND_ROBIN
        hosts:
          - { socket_address: { address: "istio-pilot", port_value: 8080 }}

      - name: zvpn.pilots
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        hosts:
          - { socket_address: { address: "istio-pilot", port_value: 15011 }}

      # TODO: if we want to support v1 mesh expansion, add 15005, 8080.
      # Alternative is to keep using the existing ILB and 0.7 debian for legacy, and use 0.8/v2 for
      # all new multi-cluster and mesh expansion

      - name: zvpn.ca
        connect_timeout: 5s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: istio-ca.istio-system.svc.cluster.local|grpc
          eds_config: {"ads": {}}

      - name: zvpn.dns
        connect_timeout: 5s
        lb_policy: ROUND_ROBIN
        type: STRICT_DNS
        hosts:
          - { socket_address: { address: "kube-dns.kube-system", port_value: 53 }}

      # Connection to Mixer. Because policy and telemetry share the same port, currently only
      # telemetry is supported. Policy should be deployed locally.
      - name: zvpn.mixer
        connect_timeout: 5s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: istio-telemetry.istio-system.svc.cluster.local|tcp-plain
          eds_config: {"ads": {}}

{{ if .Values.zvpn }}
{{- range $app := .Values.zvpn.apps }}

      - name: zvpn.{{ $app.portName }}
        connect_timeout: 0.25s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: {{ $app.serviceKey }}
          eds_config: {"ads": {}}
{{ end }}
{{ end }}
