# TODO: the original template has service account, roles, etc
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        sidecar.istio.io/inject: "false"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
{{- if .Values.global.rbacEnabled }}
      serviceAccountName: prometheus
{{ end }}
      containers:
        - name: prometheus
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          {{- if .Values.global.aspenMeshCloud.enabled }}
          command: [ "/bin/sh" ]
          args:
            - '-c'
            - |
              set -e
              sed -e "s|<CLUSTER_NAME>|$(CLUSTER_NAME)|g" -e "s|<ASPEN_TOKEN>|$(ASPEN_TOKEN)|g" /etc/prom-config/prometheus.yml > /etc/prometheus/prometheus.yml
              exec /bin/prometheus --storage.tsdb.retention=6h --config.file=/etc/prometheus/prometheus.yml
          {{- else }}
          args:
            - '--storage.tsdb.retention=6h'
            - '--config.file=/etc/prometheus/prometheus.yml'
          {{- end }}
          ports:
            - containerPort: 9090
              name: http
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: config-volume
            mountPath: {{ if .Values.global.aspenMeshCloud.enabled }}/etc/prom-config{{ else }}/etc/prometheus{{ end }}
          {{- if .Values.global.aspenMeshCloud.enabled }}
          env:
          - name: ASPEN_TOKEN
            valueFrom:
              secretKeyRef:
                name: aspenmesh
                key: TOKEN
          - name: CLUSTER_NAME
            valueFrom:
              secretKeyRef:
                name: aspenmesh
                key: CLUSTER_NAME
          {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: prometheus
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
